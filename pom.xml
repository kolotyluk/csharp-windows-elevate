<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

  <!--
    See http://incubator.apache.org/npanday for using Maven with .NET
  -->
  
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <groupId>net.kolotyluk.windows</groupId>
  <artifactId>csharp-windows-elevate</artifactId>
  <version>0.0.24-SNAPSHOT</version>
  <packaging>pom</packaging>
	
  <modules>
    <module>elevate</module>
    <module>elevate-mklink</module>
  </modules>

  <name>csharp-windows-elevate</name>
  <description>A collection of utilities for working around problems with Windows UAC. These utilties let you run commands or programs with Administrator privileges so that UAC prompt is avoided. This can be particularly useful when automating processes such as unit testing, software builds, etc.</description>
  <url>http://kolotyluk.github.io/${project.artifactId}</url>
  
  <inceptionYear>2014</inceptionYear>
  
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
<!--
  <scm>
  	<url>https://github.com/kolotyluk/csharp-windows-elevate</url>
	  <connection>scm:git:https://github.com/kolotyluk/csharp-windows-elevate.git</connection>
	  <developerConnection>scm:git:https://github.com/kolotyluk/csharp-windows-elevate.git</developerConnection>
    <tag>csharp-windows-elevate-0.0.21</tag>
  </scm>
-->
  <scm>
  	<url>https://github.com/kolotyluk/csharp-windows-elevate</url>
    <connection>scm:git:https://github.com/kolotyluk/${project.artifactId}</connection>
    <developerConnection>scm:git:ssh://git@github.com/kolotyluk/${project.artifactId}.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
	  
  <issueManagement>
    <url>https://github.com/kolotyluk/${project.artifactId}/issues</url>
	<system>GitHub Issues</system>
  </issueManagement>

  <distributionManagement>
    <site>
        <id>gh-pages</id>
        <name>Kolotyluk GitHub Pages</name>
        <!-- <url>git:ssh://git@github.com/kolotyluk/csharp-windows-elevate.git?gh-pages#</url> -->
    	<url>git:ssh://git@github.com/kolotyluk/${project.artifactId}.git?gh-pages#</url>
    	<!-- <url>https://github.com/kolotyluk/csharp-windows-elevate.git?gh-pages#</url> -->
    </site>
  </distributionManagement>


  <developers>
    <developer>
      <id>eric</id>
      <name>Eric Kolotyluk</name>
      <email>eric@kolotyluk.net</email>
      <url>https://plus.google.com/+EricKolotyluk/about</url>
      <organization>Open Source by Eric Kolotyluk</organization>
      <organizationUrl>http://kolotyluk.github.io</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>-8</timezone>
      <properties>
        <picUrl>http://tinyurl.com/qgrhs46</picUrl>
      </properties>
    </developer>
  </developers>
  
  <organization>
  	<name>Open Source by Eric Kolotyluk</name>
  	<url>http://kolotyluk.github.io</url>
  </organization>
  
  <properties>
    <encoding>UTF-8</encoding>
    <github.global.server>github</github.global.server>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	        <coding-standards.version>1.1.1</coding-standards.version>
  </properties>
	
  <dependencyManagement>
  	<dependencies>
      <dependency>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-provider-api</artifactId>
        <version>2.6</version>
      </dependency>
	  <dependency>
        <groupId>NUnit</groupId>
        <artifactId>NUnit.Framework</artifactId>
        <version>2.2.8.0</version>
	  	<scope>test</scope>
        <type>dotnet-library</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
  	<resources>
      <resource>
        <directory>src/site/apt</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>
      	<plugin>
          <groupId>org.apache.npanday.plugins</groupId>
          <artifactId>maven-compile-plugin</artifactId>
          <version>1.5.0-incubating-SNAPSHOT</version>
          <extensions>true</extensions>
          <configuration>
            <frameworkVersion>4.0</frameworkVersion>
            <main>net.kolotyluk.windows.elevate.Elevate</main>
            <parameters>
              <parameter>/win32manifest:Properties\app.manifest</parameter>
            </parameters>
      	  </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.1</version>
          <!--
            Bugs in older versions prevent altReleaseDeploymentRepository
            and altSnapshotDeploymentRepository from working correctly
            https://maven.apache.org/plugins/maven-deploy-plugin/deploy-mojo.html
         -->
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5</version>
        </plugin>
      	<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <escapeString>\</escapeString>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>0.9</version>
 	    </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>site</phase>
            <configuration>
              <target name="sandcastle">
              	<echo message="Copying bin directory..." />
              	<copy todir="bin" failonerror="false">
                  <fileset dir="../../bin" />
               </copy>
                <exec executable="cmd">
                  <arg value="/c" />
                  <arg value="%SystemRoot%\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe" />
                  <arg value="elevate.shfbproj" />
              	</exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <escapeString>\</escapeString>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <!-- Necessary hack until NPanday 1.5 is formally released -->
          <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
      	  <releaseProfiles>github-site</releaseProfiles>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>net.trajano</groupId>
                            <artifactId>coding-standards</artifactId>
                            <version>${coding-standards.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.trajano.wagon</groupId>
                            <artifactId>wagon-git</artifactId>
                            <version>1.0.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
   </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>github-site</id>
      <!--
        We do not want to deploy our site to GitHub until we release it,
        otherwise, snap-shot releases get published. For example:
          mvn release:clean
          mvn release:prepare
          mvn release:perform
        should just work. Add the following to the maven-release-plugin
          <plugin>
            <artifactId>maven-release-plugin</artifactId>
            <configuration>
      	      <releaseProfiles>github-site</releaseProfiles>
          </configuration>
        </plugin>
      -->
      <build>
        <plugins>
          <plugin>
            <!--
            	deploy the site to github pages
            	https://github.com/github/maven-plugins
            -->
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <configuration>
              <!-- the id of the server with the passwords in settings.xml -->
              <server>github</server>
              <!-- sometimes the plugin cannot figure out the owner and name  -->
              <!-- from the scm info, so it is best to define it explicitly   -->
<!--               <repositoryOwner>kolotyluk</repositoryOwner> -->
<!--               <repositoryName>java-file-utilities</repositoryName> -->
<!--              <message>Creating GitHub Pages site for ${project.version}</message> -->
          	  <message>Creating site for ${project.artifactId}, ${project.version}</message>
              <!-- this does the trick to place every module in the correct subfolder -->
              <path>${project.distributionManagement.site.url}</path>
              <merge>true</merge>
            </configuration>
            <executions>
              <execution>
              	<id>github-site</id>
              	<phase>site-deploy</phase>
                <goals>
                  <goal>site</goal> <!-- the site goal uploads to gh_pages -->
                </goals>
              </execution>
            </executions>
          </plugin>
      	  <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>3.1</version>
            <configuration>
              <skipDeploy>true</skipDeploy>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.6</version>
      </plugin>
    </plugins>
  </reporting>

</project>