<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

  <!--
    See http://incubator.apache.org/npanday for using Maven with .NET
  -->
  
  <parent>
    <groupId>net.kolotyluk.windows</groupId>
    <artifactId>csharp-windows-elevate</artifactId>
    <version>0.0.21-SNAPSHOT</version>
	<relativePath>..</relativePath>
  </parent>

  <groupId>net.kolotyluk.windows.elevate</groupId>
  <artifactId>elevate-mklink</artifactId>
  <!-- make sure org.apache.npanday.plugins:maven-compile-plugin has -->
  <!--    <extensions>true</extensions>                              -->
  <packaging>dotnet-executable</packaging>

  <name>elevate-mklink</name>
  <description>Execute the mklink command with elevated privileges. This form of the elevate command is specialize to only invoke mklink, and no other commands. Consquently, it is safer than using elevate.exe, which can invoke any command or program.</description>
  <url>http://kolotyluk.github.io/csharp-windows-elevate</url>
  
  <inceptionYear>2014</inceptionYear>
  
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
  
  <scm>
  	<url>https://github.com/kolotyluk/csharp-windows-elevate</url>
	  <connection>scm:git:https://github.com/kolotyluk/csharp-windows-elevate.git</connection>
	  <developerConnection>scm:git:https://github.com/kolotyluk/csharp-windows-elevate.git</developerConnection>
    <tag>csharp-windows-elevate-0.0.21</tag>
  </scm>

  <issueManagement>
    <url>https://github.com/kolotyluk/csharp-windows-elevate/issues</url>
	<system>GitHub Issues</system>
  </issueManagement>
  
  <organization>
  	<name>Open Source by Eric Kolotyluk</name>
  	<url>http://kolotyluk.github.io</url>
  </organization>
  
  <properties>
    <encoding>UTF-8</encoding>
    <github.global.server>github</github.global.server>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <build>
    <sourceDirectory>src/main/csharp</sourceDirectory>
    <testSourceDirectory>src/test/csharp</testSourceDirectory>

  	<resources>
      <resource>
        <directory>src/site/apt</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  	

    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
          	<!--
              In .Net there is no way to merge .netmodule or .dll files into a single assembly.
              Concequenly, if we want to create a single assembly with common code, this has to
              be done at compile time, via source code. To achieve this, we temporarily copy in
              the common source code to the project, then delete it when we have compiled the
              final .exe file.
			-->
          	<id>copy-common</id>
            <phase>generate-sources</phase>
            <configuration>
              <target name="copy-common">
              	<echo message="Copying common code" />
              	<copy tofile="src/main/csharp/net/kolotyluk/windows/elevate/ElevateCommon.cs" file="../elevate-common/src/main/csharp/net/kolotyluk/windows/elevate/ElevateCommon.cs" overwrite="true" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
          	<!--
              Not strickly necessary, but we may as well delete it so that is does not end up
              under source control.
            -->
          	<id>delete-common</id>
            <phase>compile</phase>
            <configuration>
              <target name="delete-common">
              	<echo message="Deleting common code" />
              	<delete file="src/main/csharp/net/kolotyluk/windows/elevate/ElevateCommon.cs" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
          	<id>sandcastle</id>
            <phase>site</phase>
            <configuration>
              <target name="sandcastle">
              	<echo message="Copying bin directory..." />
              	<copy todir="bin" failonerror="false">
                  <fileset dir="../../bin" />
                </copy>
                <exec executable="cmd">
                  <arg value="/c" />
                  <arg value="%SystemRoot%\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe" />
                  <arg value="elevate.shfbproj" />
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.npanday.plugins</groupId>
        <artifactId>maven-compile-plugin</artifactId>
        <configuration>
          <frameworkVersion>4.0</frameworkVersion>
          <main>net.kolotyluk.windows.elevate.Elevate</main>
          <parameters>
            <parameter>/win32manifest:Properties\app.manifest</parameter>
          </parameters>
       </configuration>
      </plugin>
     <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <!-- Necessary hack until NPanday 1.5 is formally released -->
          <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
      	  <releaseProfiles>github-site</releaseProfiles>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
     <plugin>
        <groupId>org.apache.npanday.plugins</groupId>
        <artifactId>maven-link-plugin</artifactId>
        <version>1.5.0-incubating-SNAPSHOT</version>
        <extensions>true</extensions>
        <configuration>
          <frameworkVersion>4.0</frameworkVersion>
          <main>net.kolotyluk.windows.elevate.Elevate</main>
          <parameters>
            <parameter>/target:exe</parameter>
          	<parameter>/out:elevate.exe</parameter>
          	<parameter>/main:Elevate.Main</parameter>
          </parameters>
      	  <executions>
            <execution>
           	<phase>compile</phase>
      	  	<goal>link</goal>
           </execution>
          </executions>
        </configuration>
     </plugin>
      <plugin>
        <groupId>org.apache.npanday.plugins</groupId>
        <artifactId>maven-resgen-plugin</artifactId>
        <version>1.5.0-incubating-SNAPSHOT</version>
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>github-site</id>
      <!--
        We do not want to deploy our site to GitHub until we release it,
        otherwise, snap-shot releases get published. For example:
          mvn release:clean
          mvn release:prepare
          mvn release:perform
        should just work. Add the following to the maven-release-plugin
          <plugin>
            <artifactId>maven-release-plugin</artifactId>
            <configuration>
      	      <releaseProfiles>github-site</releaseProfiles>
          </configuration>
        </plugin>
      -->
      <build>
        <plugins>
          <plugin>
            <!--
            	deploy the site to github pages
            	https://github.com/github/maven-plugins
            -->
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <configuration>
              <!-- the id of the server with the passwords in settings.xml -->
              <server>github</server>
              <!-- sometimes the plugin cannot figure out the owner and name  -->
              <!-- from the scm info, so it is best to define it explicitly   -->
<!--               <repositoryOwner>kolotyluk</repositoryOwner> -->
<!--               <repositoryName>java-file-utilities</repositoryName> -->
              <message>Creating GitHub Pages site for ${project.version}</message>
            </configuration>
            <executions>
              <execution>
              	<phase>site-deploy</phase>
                <goals>
                  <goal>site</goal> <!-- the site goal uploads to gh_pages -->
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.6</version>
      </plugin>
    </plugins>
  </reporting>

</project>